# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "BREAK BUILD_IN COMMA CONTINUE CUSTOM_FUNC DEQUAL DIVMUL ELSE EQUAL FOR FUNCDECL GE GT ID IF LCUADR LCURL LE LPAR LT MOD NOTEQUAL NUMBER PLUSMINUS RCUADR RCURL RETURN RPAR SEMICOLON STRING VARIABLE_TYPE WHILEprogram :\n    | function\n    | program function\n    function : func_header func_bodyfunc_header : VARIABLE_TYPE FUNCDECL LPAR args RPARargs :\n    | expr\n    | args COMMA exprfunc_body : blockblock : LCURL body RCURLbody :\n    | body line semicolons\n    | body multilinesemicolons : SEMICOLON\n    | semicolons SEMICOLONmultiline : if_statement\n    | while_statement\n    | for_statementline : modal_function\n    | init\n    | func\n    | assignmodal_function : RETURN arg\n    | BREAK\n    | CONTINUEvar_cal : ID LCUADR expr RCUADRif_statement : IF LPAR condition RPAR block\n    | if_statement ELSE blockwhile_statement : WHILE LPAR condition RPAR blockfor_statement : FOR LPAR init SEMICOLON condition SEMICOLON change_val RPAR blockchange_val : ID exprcondition : expr cond_sign exprcond_sign : DEQUAL\n    | GT\n    | LT\n    | GE\n    | LE\n    | NOTEQUALinit :\n    | VARIABLE_TYPE ID\n    | VARIABLE_TYPE ID EQUAL ID DIVMUL NUMBER\n    | VARIABLE_TYPE ID EQUAL expr\n    | VARIABLE_TYPE ID EQUAL var_cal\n    | VARIABLE_TYPE ID LCUADR RCUADR EQUAL array_initarray_init : LCURL init_block RCURLinit_block : arg\n    | arg COMMA\n    | init_block arg\n    | init_block arg COMMAassign : ID EQUAL expr\n    | ID EQUAL var_cal\n    | var_cal EQUAL expr\n    | var_cal EQUAL var_cal\n    | ID exprfunc : CUSTOM_FUNC LPAR args RPAR\n    | ID LPAR args RPAR\n    | BUILD_IN LPAR args RPAR\n    | BUILD_IN output_operatoroutput_operator : LT LT arg\n    | LT LT BUILD_IN\n    | LT LT IDexpr : fact\n    | PLUSMINUS PLUSMINUS\n    | expr PLUSMINUS fact\n    | expr MOD fact\n    | IDfact : term\n    | fact DIVMUL termterm : arg\n    | LPAR expr RPARarg : NUMBER\n    | STRING\n    | VARIABLE_TYPE ID\n    | VARIABLE_TYPE ID LCUADR RCUADR\n    | ID LCUADR RCUADR\n    | var_cal\n    | NUMBER ID\n    | func"

_lr_action_items = {
    "VARIABLE_TYPE": (
        [
            0,
            1,
            2,
            5,
            6,
            7,
            8,
            10,
            11,
            12,
            14,
            19,
            20,
            21,
            22,
            26,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            63,
            64,
            67,
            68,
            69,
            70,
            72,
            73,
            74,
            75,
            76,
            77,
            89,
            100,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            126,
            128,
            132,
            134,
            135,
            137,
            139,
            140,
            143,
            144,
        ],
        [
            4,
            4,
            -2,
            -3,
            -4,
            -9,
            -11,
            25,
            33,
            -10,
            -13,
            -16,
            -17,
            -18,
            33,
            33,
            33,
            -71,
            -72,
            -76,
            -78,
            -12,
            -14,
            33,
            33,
            33,
            33,
            33,
            33,
            -58,
            33,
            33,
            25,
            -73,
            33,
            33,
            33,
            33,
            33,
            33,
            -77,
            -15,
            -28,
            33,
            33,
            -75,
            -56,
            33,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            33,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            33,
            -74,
            -27,
            -29,
            33,
            33,
            -46,
            33,
            -48,
            -47,
            -49,
            -30,
        ],
    ),
    "$end": (
        [
            0,
            1,
            2,
            5,
            6,
            7,
            12,
        ],
        [
            -1,
            0,
            -2,
            -3,
            -4,
            -9,
            -10,
        ],
    ),
    "LCURL": (
        [
            3,
            48,
            66,
            113,
            121,
            125,
            141,
        ],
        [
            8,
            8,
            -5,
            8,
            8,
            132,
            8,
        ],
    ),
    "FUNCDECL": (
        [
            4,
        ],
        [
            9,
        ],
    ),
    "RCURL": (
        [
            8,
            10,
            12,
            14,
            19,
            20,
            21,
            42,
            43,
            44,
            45,
            46,
            47,
            59,
            64,
            74,
            75,
            76,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
            126,
            128,
            134,
            135,
            139,
            140,
            143,
            144,
        ],
        [
            -11,
            12,
            -10,
            -13,
            -16,
            -17,
            -18,
            -71,
            -72,
            -76,
            -78,
            -12,
            -14,
            -58,
            -73,
            -77,
            -15,
            -28,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
            -27,
            -29,
            138,
            -46,
            -48,
            -47,
            -49,
            -30,
        ],
    ),
    "RETURN": (
        [
            8,
            10,
            12,
            14,
            19,
            20,
            21,
            46,
            47,
            75,
            76,
            126,
            128,
            144,
        ],
        [
            -11,
            22,
            -10,
            -13,
            -16,
            -17,
            -18,
            -12,
            -14,
            -15,
            -28,
            -27,
            -29,
            -30,
        ],
    ),
    "BREAK": (
        [
            8,
            10,
            12,
            14,
            19,
            20,
            21,
            46,
            47,
            75,
            76,
            126,
            128,
            144,
        ],
        [
            -11,
            23,
            -10,
            -13,
            -16,
            -17,
            -18,
            -12,
            -14,
            -15,
            -28,
            -27,
            -29,
            -30,
        ],
    ),
    "CONTINUE": (
        [
            8,
            10,
            12,
            14,
            19,
            20,
            21,
            46,
            47,
            75,
            76,
            126,
            128,
            144,
        ],
        [
            -11,
            24,
            -10,
            -13,
            -16,
            -17,
            -18,
            -12,
            -14,
            -15,
            -28,
            -27,
            -29,
            -30,
        ],
    ),
    "CUSTOM_FUNC": (
        [
            8,
            10,
            11,
            12,
            14,
            19,
            20,
            21,
            22,
            26,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            64,
            67,
            68,
            69,
            70,
            72,
            73,
            74,
            75,
            76,
            77,
            89,
            100,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            126,
            128,
            132,
            134,
            135,
            137,
            139,
            140,
            143,
            144,
        ],
        [
            -11,
            28,
            28,
            -10,
            -13,
            -16,
            -17,
            -18,
            28,
            28,
            28,
            -71,
            -72,
            -76,
            -78,
            -12,
            -14,
            28,
            28,
            28,
            28,
            28,
            28,
            -58,
            28,
            28,
            -73,
            28,
            28,
            28,
            28,
            28,
            28,
            -77,
            -15,
            -28,
            28,
            28,
            -75,
            -56,
            28,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            28,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            28,
            -74,
            -27,
            -29,
            28,
            28,
            -46,
            28,
            -48,
            -47,
            -49,
            -30,
        ],
    ),
    "ID": (
        [
            8,
            10,
            11,
            12,
            14,
            19,
            20,
            21,
            22,
            25,
            26,
            33,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            64,
            67,
            68,
            69,
            70,
            72,
            73,
            74,
            75,
            76,
            77,
            89,
            100,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            126,
            128,
            132,
            133,
            134,
            135,
            137,
            139,
            140,
            143,
            144,
        ],
        [
            -11,
            26,
            39,
            -10,
            -13,
            -16,
            -17,
            -18,
            50,
            51,
            39,
            64,
            39,
            74,
            -72,
            -76,
            -78,
            -12,
            -14,
            39,
            81,
            39,
            81,
            39,
            39,
            -58,
            39,
            39,
            -73,
            39,
            50,
            50,
            50,
            39,
            39,
            -77,
            -15,
            -28,
            101,
            112,
            -75,
            -56,
            39,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            39,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            39,
            -74,
            -27,
            -29,
            50,
            137,
            50,
            -46,
            39,
            -48,
            -47,
            -49,
            -30,
        ],
    ),
    "BUILD_IN": (
        [
            8,
            10,
            11,
            12,
            14,
            19,
            20,
            21,
            22,
            26,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            64,
            67,
            68,
            69,
            70,
            72,
            73,
            74,
            75,
            76,
            77,
            89,
            100,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            126,
            128,
            132,
            134,
            135,
            137,
            139,
            140,
            143,
            144,
        ],
        [
            -11,
            29,
            29,
            -10,
            -13,
            -16,
            -17,
            -18,
            29,
            29,
            29,
            -71,
            -72,
            -76,
            -78,
            -12,
            -14,
            29,
            29,
            29,
            29,
            29,
            29,
            -58,
            29,
            29,
            -73,
            29,
            29,
            29,
            29,
            29,
            29,
            -77,
            -15,
            -28,
            29,
            111,
            -75,
            -56,
            29,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            29,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            29,
            -74,
            -27,
            -29,
            29,
            29,
            -46,
            29,
            -48,
            -47,
            -49,
            -30,
        ],
    ),
    "IF": (
        [
            8,
            10,
            12,
            14,
            19,
            20,
            21,
            46,
            47,
            75,
            76,
            126,
            128,
            144,
        ],
        [
            -11,
            30,
            -10,
            -13,
            -16,
            -17,
            -18,
            -12,
            -14,
            -15,
            -28,
            -27,
            -29,
            -30,
        ],
    ),
    "WHILE": (
        [
            8,
            10,
            12,
            14,
            19,
            20,
            21,
            46,
            47,
            75,
            76,
            126,
            128,
            144,
        ],
        [
            -11,
            31,
            -10,
            -13,
            -16,
            -17,
            -18,
            -12,
            -14,
            -15,
            -28,
            -27,
            -29,
            -30,
        ],
    ),
    "FOR": (
        [
            8,
            10,
            12,
            14,
            19,
            20,
            21,
            46,
            47,
            75,
            76,
            126,
            128,
            144,
        ],
        [
            -11,
            32,
            -10,
            -13,
            -16,
            -17,
            -18,
            -12,
            -14,
            -15,
            -28,
            -27,
            -29,
            -30,
        ],
    ),
    "SEMICOLON": (
        [
            8,
            10,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            23,
            24,
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            49,
            51,
            54,
            59,
            63,
            64,
            71,
            74,
            75,
            76,
            81,
            82,
            83,
            85,
            86,
            93,
            95,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
            126,
            127,
            128,
            129,
            130,
            131,
            138,
            144,
        ],
        [
            -11,
            -39,
            -10,
            47,
            -13,
            -19,
            -20,
            -21,
            -22,
            -16,
            -17,
            -18,
            -24,
            -25,
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            75,
            -14,
            -23,
            -40,
            -54,
            -58,
            -39,
            -73,
            -63,
            -77,
            -15,
            -28,
            -66,
            -50,
            -51,
            -53,
            -52,
            122,
            -70,
            -64,
            -65,
            -68,
            -75,
            -66,
            -42,
            -43,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
            -27,
            -32,
            -29,
            133,
            -41,
            -44,
            -45,
            -30,
        ],
    ),
    "LPAR": (
        [
            9,
            11,
            26,
            28,
            29,
            30,
            31,
            32,
            34,
            39,
            50,
            52,
            53,
            55,
            56,
            57,
            58,
            61,
            62,
            67,
            68,
            69,
            70,
            72,
            73,
            77,
            81,
            101,
            106,
            111,
            112,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            137,
        ],
        [
            11,
            34,
            52,
            57,
            58,
            61,
            62,
            63,
            34,
            73,
            73,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            73,
            73,
            34,
            58,
            73,
            34,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            34,
            34,
        ],
    ),
    "RPAR": (
        [
            11,
            35,
            36,
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            52,
            57,
            58,
            59,
            64,
            65,
            71,
            73,
            74,
            79,
            80,
            87,
            88,
            90,
            92,
            95,
            96,
            97,
            98,
            99,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
            127,
            136,
            142,
        ],
        [
            -6,
            66,
            -7,
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -6,
            -6,
            -6,
            -58,
            -73,
            95,
            -63,
            -6,
            -77,
            105,
            95,
            108,
            109,
            113,
            121,
            -70,
            -8,
            -64,
            -65,
            -68,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
            -32,
            141,
            -31,
        ],
    ),
    "COMMA": (
        [
            11,
            35,
            36,
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            52,
            57,
            58,
            59,
            64,
            71,
            73,
            74,
            79,
            80,
            87,
            88,
            95,
            96,
            97,
            98,
            99,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
            135,
            139,
        ],
        [
            -6,
            67,
            -7,
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -6,
            -6,
            -6,
            -58,
            -73,
            -63,
            -6,
            -77,
            67,
            -7,
            67,
            67,
            -70,
            -8,
            -64,
            -65,
            -68,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
            140,
            143,
        ],
    ),
    "PLUSMINUS": (
        [
            11,
            26,
            34,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            64,
            65,
            67,
            71,
            72,
            73,
            74,
            77,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            91,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            127,
            137,
            142,
        ],
        [
            38,
            38,
            38,
            68,
            -62,
            71,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            38,
            38,
            68,
            38,
            38,
            38,
            38,
            -58,
            38,
            38,
            -73,
            68,
            38,
            -63,
            38,
            38,
            -77,
            38,
            68,
            -66,
            68,
            -76,
            68,
            -76,
            68,
            68,
            -70,
            68,
            -64,
            -65,
            -68,
            -75,
            -66,
            68,
            -76,
            -56,
            38,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            38,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            38,
            -74,
            68,
            38,
            68,
        ],
    ),
    "NUMBER": (
        [
            11,
            22,
            26,
            34,
            42,
            43,
            44,
            45,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            64,
            67,
            68,
            69,
            70,
            72,
            73,
            74,
            77,
            89,
            100,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            124,
            132,
            134,
            135,
            137,
            139,
            140,
            143,
        ],
        [
            42,
            42,
            42,
            42,
            -71,
            -72,
            -76,
            -78,
            42,
            42,
            42,
            42,
            42,
            42,
            -58,
            42,
            42,
            -73,
            42,
            42,
            42,
            42,
            42,
            42,
            -77,
            42,
            42,
            -75,
            -56,
            42,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            42,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            42,
            -74,
            130,
            42,
            42,
            -46,
            42,
            -48,
            -47,
            -49,
        ],
    ),
    "STRING": (
        [
            11,
            22,
            26,
            34,
            42,
            43,
            44,
            45,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            64,
            67,
            68,
            69,
            70,
            72,
            73,
            74,
            77,
            89,
            100,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            132,
            134,
            135,
            137,
            139,
            140,
            143,
        ],
        [
            43,
            43,
            43,
            43,
            -71,
            -72,
            -76,
            -78,
            43,
            43,
            43,
            43,
            43,
            43,
            -58,
            43,
            43,
            -73,
            43,
            43,
            43,
            43,
            43,
            43,
            -77,
            43,
            43,
            -75,
            -56,
            43,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            43,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            43,
            -74,
            43,
            43,
            -46,
            43,
            -48,
            -47,
            -49,
        ],
    ),
    "ELSE": (
        [
            12,
            19,
            76,
            126,
        ],
        [
            -10,
            48,
            -28,
            -27,
        ],
    ),
    "EQUAL": (
        [
            26,
            27,
            51,
            104,
            107,
        ],
        [
            53,
            56,
            77,
            125,
            -26,
        ],
    ),
    "LCUADR": (
        [
            26,
            39,
            50,
            51,
            64,
            81,
            101,
            112,
        ],
        [
            55,
            72,
            72,
            78,
            94,
            106,
            106,
            72,
        ],
    ),
    "LT": (
        [
            29,
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            59,
            60,
            64,
            71,
            74,
            91,
            95,
            97,
            98,
            99,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
        ],
        [
            60,
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -58,
            89,
            -73,
            -63,
            -77,
            117,
            -70,
            -64,
            -65,
            -68,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            60,
            -61,
            -74,
        ],
    ),
    "MOD": (
        [
            36,
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            54,
            59,
            64,
            65,
            71,
            74,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            91,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
            127,
            142,
        ],
        [
            69,
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            69,
            -58,
            -73,
            69,
            -63,
            -77,
            69,
            -66,
            69,
            -76,
            69,
            -76,
            69,
            69,
            -70,
            69,
            -64,
            -65,
            -68,
            -75,
            -66,
            69,
            -76,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
            69,
            69,
        ],
    ),
    "RCUADR": (
        [
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            59,
            64,
            71,
            72,
            74,
            78,
            84,
            94,
            95,
            97,
            98,
            99,
            100,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
        ],
        [
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -58,
            -73,
            -63,
            100,
            -77,
            104,
            107,
            123,
            -70,
            -64,
            -65,
            -68,
            -75,
            -56,
            100,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
        ],
    ),
    "DEQUAL": (
        [
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            59,
            64,
            71,
            74,
            91,
            95,
            97,
            98,
            99,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
        ],
        [
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -58,
            -73,
            -63,
            -77,
            115,
            -70,
            -64,
            -65,
            -68,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
        ],
    ),
    "GT": (
        [
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            59,
            64,
            71,
            74,
            91,
            95,
            97,
            98,
            99,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
        ],
        [
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -58,
            -73,
            -63,
            -77,
            116,
            -70,
            -64,
            -65,
            -68,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
        ],
    ),
    "GE": (
        [
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            59,
            64,
            71,
            74,
            91,
            95,
            97,
            98,
            99,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
        ],
        [
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -58,
            -73,
            -63,
            -77,
            118,
            -70,
            -64,
            -65,
            -68,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
        ],
    ),
    "LE": (
        [
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            59,
            64,
            71,
            74,
            91,
            95,
            97,
            98,
            99,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
        ],
        [
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -58,
            -73,
            -63,
            -77,
            119,
            -70,
            -64,
            -65,
            -68,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
        ],
    ),
    "NOTEQUAL": (
        [
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            59,
            64,
            71,
            74,
            91,
            95,
            97,
            98,
            99,
            100,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
        ],
        [
            -62,
            -66,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -58,
            -73,
            -63,
            -77,
            120,
            -70,
            -64,
            -65,
            -68,
            -75,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
        ],
    ),
    "DIVMUL": (
        [
            37,
            40,
            41,
            42,
            43,
            44,
            45,
            59,
            64,
            74,
            83,
            85,
            95,
            97,
            98,
            99,
            100,
            101,
            103,
            105,
            107,
            108,
            109,
            110,
            111,
            112,
            123,
        ],
        [
            70,
            -67,
            -69,
            -71,
            -72,
            -76,
            -78,
            -58,
            -73,
            -77,
            -76,
            -76,
            -70,
            70,
            70,
            -68,
            -75,
            124,
            -76,
            -56,
            -26,
            -55,
            -57,
            -59,
            -60,
            -61,
            -74,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if _x not in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "program": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "function": (
        [
            0,
            1,
        ],
        [
            2,
            5,
        ],
    ),
    "func_header": (
        [
            0,
            1,
        ],
        [
            3,
            3,
        ],
    ),
    "func_body": (
        [
            3,
        ],
        [
            6,
        ],
    ),
    "block": (
        [
            3,
            48,
            113,
            121,
            141,
        ],
        [
            7,
            76,
            126,
            128,
            144,
        ],
    ),
    "body": (
        [
            8,
        ],
        [
            10,
        ],
    ),
    "line": (
        [
            10,
        ],
        [
            13,
        ],
    ),
    "multiline": (
        [
            10,
        ],
        [
            14,
        ],
    ),
    "modal_function": (
        [
            10,
        ],
        [
            15,
        ],
    ),
    "init": (
        [
            10,
            63,
        ],
        [
            16,
            93,
        ],
    ),
    "func": (
        [
            10,
            11,
            22,
            26,
            34,
            52,
            53,
            55,
            56,
            57,
            58,
            61,
            62,
            67,
            68,
            69,
            70,
            72,
            73,
            77,
            89,
            106,
            114,
            122,
            132,
            134,
            137,
        ],
        [
            17,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
        ],
    ),
    "assign": (
        [
            10,
        ],
        [
            18,
        ],
    ),
    "if_statement": (
        [
            10,
        ],
        [
            19,
        ],
    ),
    "while_statement": (
        [
            10,
        ],
        [
            20,
        ],
    ),
    "for_statement": (
        [
            10,
        ],
        [
            21,
        ],
    ),
    "var_cal": (
        [
            10,
            11,
            22,
            26,
            34,
            52,
            53,
            55,
            56,
            57,
            58,
            61,
            62,
            67,
            68,
            69,
            70,
            72,
            73,
            77,
            89,
            106,
            114,
            122,
            132,
            134,
            137,
        ],
        [
            27,
            44,
            44,
            44,
            44,
            44,
            83,
            44,
            85,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            103,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
        ],
    ),
    "args": (
        [
            11,
            52,
            57,
            58,
            73,
        ],
        [
            35,
            79,
            87,
            88,
            79,
        ],
    ),
    "expr": (
        [
            11,
            26,
            34,
            52,
            53,
            55,
            56,
            57,
            58,
            61,
            62,
            67,
            72,
            73,
            77,
            106,
            114,
            122,
            137,
        ],
        [
            36,
            54,
            65,
            80,
            82,
            84,
            86,
            36,
            36,
            91,
            91,
            96,
            84,
            36,
            102,
            84,
            127,
            91,
            142,
        ],
    ),
    "fact": (
        [
            11,
            26,
            34,
            52,
            53,
            55,
            56,
            57,
            58,
            61,
            62,
            67,
            68,
            69,
            72,
            73,
            77,
            106,
            114,
            122,
            137,
        ],
        [
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            97,
            98,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
        ],
    ),
    "term": (
        [
            11,
            26,
            34,
            52,
            53,
            55,
            56,
            57,
            58,
            61,
            62,
            67,
            68,
            69,
            70,
            72,
            73,
            77,
            106,
            114,
            122,
            137,
        ],
        [
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
            99,
            40,
            40,
            40,
            40,
            40,
            40,
            40,
        ],
    ),
    "arg": (
        [
            11,
            22,
            26,
            34,
            52,
            53,
            55,
            56,
            57,
            58,
            61,
            62,
            67,
            68,
            69,
            70,
            72,
            73,
            77,
            89,
            106,
            114,
            122,
            132,
            134,
            137,
        ],
        [
            41,
            49,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            41,
            110,
            41,
            41,
            41,
            135,
            139,
            41,
        ],
    ),
    "semicolons": (
        [
            13,
        ],
        [
            46,
        ],
    ),
    "output_operator": (
        [
            29,
            111,
        ],
        [
            59,
            59,
        ],
    ),
    "condition": (
        [
            61,
            62,
            122,
        ],
        [
            90,
            92,
            129,
        ],
    ),
    "cond_sign": (
        [
            91,
        ],
        [
            114,
        ],
    ),
    "array_init": (
        [
            125,
        ],
        [
            131,
        ],
    ),
    "init_block": (
        [
            132,
        ],
        [
            134,
        ],
    ),
    "change_val": (
        [
            133,
        ],
        [
            136,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if _x not in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> program", "S'", 1, None, None, None),
    ("program -> <empty>", "program", 0, "p_program", "syntax_analysis.py", 78),
    ("program -> function", "program", 1, "p_program", "syntax_analysis.py", 79),
    (
        "program -> program function",
        "program",
        2,
        "p_program",
        "syntax_analysis.py",
        80,
    ),
    (
        "function -> func_header func_body",
        "function",
        2,
        "p_function",
        "syntax_analysis.py",
        89,
    ),
    (
        "func_header -> VARIABLE_TYPE FUNCDECL LPAR args RPAR",
        "func_header",
        5,
        "p_func_header",
        "syntax_analysis.py",
        95,
    ),
    ("args -> <empty>", "args", 0, "p_args", "syntax_analysis.py", 100),
    ("args -> expr", "args", 1, "p_args", "syntax_analysis.py", 101),
    ("args -> args COMMA expr", "args", 3, "p_args", "syntax_analysis.py", 102),
    ("func_body -> block", "func_body", 1, "p_func_body", "syntax_analysis.py", 110),
    ("block -> LCURL body RCURL", "block", 3, "p_block", "syntax_analysis.py", 115),
    ("body -> <empty>", "body", 0, "p_body", "syntax_analysis.py", 120),
    ("body -> body line semicolons", "body", 3, "p_body", "syntax_analysis.py", 121),
    ("body -> body multiline", "body", 2, "p_body", "syntax_analysis.py", 122),
    (
        "semicolons -> SEMICOLON",
        "semicolons",
        1,
        "p_semicolons",
        "syntax_analysis.py",
        132,
    ),
    (
        "semicolons -> semicolons SEMICOLON",
        "semicolons",
        2,
        "p_semicolons",
        "syntax_analysis.py",
        133,
    ),
    (
        "multiline -> if_statement",
        "multiline",
        1,
        "p_multiline",
        "syntax_analysis.py",
        137,
    ),
    (
        "multiline -> while_statement",
        "multiline",
        1,
        "p_multiline",
        "syntax_analysis.py",
        138,
    ),
    (
        "multiline -> for_statement",
        "multiline",
        1,
        "p_multiline",
        "syntax_analysis.py",
        139,
    ),
    ("line -> modal_function", "line", 1, "p_line", "syntax_analysis.py", 144),
    ("line -> init", "line", 1, "p_line", "syntax_analysis.py", 145),
    ("line -> func", "line", 1, "p_line", "syntax_analysis.py", 146),
    ("line -> assign", "line", 1, "p_line", "syntax_analysis.py", 147),
    (
        "modal_function -> RETURN arg",
        "modal_function",
        2,
        "p_modal_function",
        "syntax_analysis.py",
        152,
    ),
    (
        "modal_function -> BREAK",
        "modal_function",
        1,
        "p_modal_function",
        "syntax_analysis.py",
        153,
    ),
    (
        "modal_function -> CONTINUE",
        "modal_function",
        1,
        "p_modal_function",
        "syntax_analysis.py",
        154,
    ),
    (
        "var_cal -> ID LCUADR expr RCUADR",
        "var_cal",
        4,
        "p_var_call",
        "syntax_analysis.py",
        162,
    ),
    (
        "if_statement -> IF LPAR condition RPAR block",
        "if_statement",
        5,
        "p_if_statement",
        "syntax_analysis.py",
        167,
    ),
    (
        "if_statement -> if_statement ELSE block",
        "if_statement",
        3,
        "p_if_statement",
        "syntax_analysis.py",
        168,
    ),
    (
        "while_statement -> WHILE LPAR condition RPAR block",
        "while_statement",
        5,
        "p_while_statement",
        "syntax_analysis.py",
        176,
    ),
    (
        "for_statement -> FOR LPAR init SEMICOLON condition SEMICOLON change_val RPAR block",
        "for_statement",
        9,
        "p_for_statement",
        "syntax_analysis.py",
        181,
    ),
    (
        "change_val -> ID expr",
        "change_val",
        2,
        "p_change_value",
        "syntax_analysis.py",
        186,
    ),
    (
        "condition -> expr cond_sign expr",
        "condition",
        3,
        "p_condition",
        "syntax_analysis.py",
        191,
    ),
    ("cond_sign -> DEQUAL", "cond_sign", 1, "p_cond_sign", "syntax_analysis.py", 196),
    ("cond_sign -> GT", "cond_sign", 1, "p_cond_sign", "syntax_analysis.py", 197),
    ("cond_sign -> LT", "cond_sign", 1, "p_cond_sign", "syntax_analysis.py", 198),
    ("cond_sign -> GE", "cond_sign", 1, "p_cond_sign", "syntax_analysis.py", 199),
    ("cond_sign -> LE", "cond_sign", 1, "p_cond_sign", "syntax_analysis.py", 200),
    ("cond_sign -> NOTEQUAL", "cond_sign", 1, "p_cond_sign", "syntax_analysis.py", 201),
    ("init -> <empty>", "init", 0, "p_init", "syntax_analysis.py", 206),
    ("init -> VARIABLE_TYPE ID", "init", 2, "p_init", "syntax_analysis.py", 207),
    (
        "init -> VARIABLE_TYPE ID EQUAL ID DIVMUL NUMBER",
        "init",
        6,
        "p_init",
        "syntax_analysis.py",
        208,
    ),
    (
        "init -> VARIABLE_TYPE ID EQUAL expr",
        "init",
        4,
        "p_init",
        "syntax_analysis.py",
        209,
    ),
    (
        "init -> VARIABLE_TYPE ID EQUAL var_cal",
        "init",
        4,
        "p_init",
        "syntax_analysis.py",
        210,
    ),
    (
        "init -> VARIABLE_TYPE ID LCUADR RCUADR EQUAL array_init",
        "init",
        6,
        "p_init",
        "syntax_analysis.py",
        211,
    ),
    (
        "array_init -> LCURL init_block RCURL",
        "array_init",
        3,
        "p_array_init",
        "syntax_analysis.py",
        219,
    ),
    ("init_block -> arg", "init_block", 1, "p_init_block", "syntax_analysis.py", 224),
    (
        "init_block -> arg COMMA",
        "init_block",
        2,
        "p_init_block",
        "syntax_analysis.py",
        225,
    ),
    (
        "init_block -> init_block arg",
        "init_block",
        2,
        "p_init_block",
        "syntax_analysis.py",
        226,
    ),
    (
        "init_block -> init_block arg COMMA",
        "init_block",
        3,
        "p_init_block",
        "syntax_analysis.py",
        227,
    ),
    ("assign -> ID EQUAL expr", "assign", 3, "p_assign", "syntax_analysis.py", 238),
    ("assign -> ID EQUAL var_cal", "assign", 3, "p_assign", "syntax_analysis.py", 239),
    (
        "assign -> var_cal EQUAL expr",
        "assign",
        3,
        "p_assign",
        "syntax_analysis.py",
        240,
    ),
    (
        "assign -> var_cal EQUAL var_cal",
        "assign",
        3,
        "p_assign",
        "syntax_analysis.py",
        241,
    ),
    ("assign -> ID expr", "assign", 2, "p_assign", "syntax_analysis.py", 242),
    (
        "func -> CUSTOM_FUNC LPAR args RPAR",
        "func",
        4,
        "p_func",
        "syntax_analysis.py",
        252,
    ),
    ("func -> ID LPAR args RPAR", "func", 4, "p_func", "syntax_analysis.py", 253),
    ("func -> BUILD_IN LPAR args RPAR", "func", 4, "p_func", "syntax_analysis.py", 254),
    (
        "func -> BUILD_IN output_operator",
        "func",
        2,
        "p_func",
        "syntax_analysis.py",
        255,
    ),
    (
        "output_operator -> LT LT arg",
        "output_operator",
        3,
        "p_output_operator",
        "syntax_analysis.py",
        263,
    ),
    (
        "output_operator -> LT LT BUILD_IN",
        "output_operator",
        3,
        "p_output_operator",
        "syntax_analysis.py",
        264,
    ),
    (
        "output_operator -> LT LT ID",
        "output_operator",
        3,
        "p_output_operator",
        "syntax_analysis.py",
        265,
    ),
    ("expr -> fact", "expr", 1, "p_expr", "syntax_analysis.py", 271),
    ("expr -> PLUSMINUS PLUSMINUS", "expr", 2, "p_expr", "syntax_analysis.py", 272),
    ("expr -> expr PLUSMINUS fact", "expr", 3, "p_expr", "syntax_analysis.py", 273),
    ("expr -> expr MOD fact", "expr", 3, "p_expr", "syntax_analysis.py", 274),
    ("expr -> ID", "expr", 1, "p_expr", "syntax_analysis.py", 275),
    ("fact -> term", "fact", 1, "p_fact", "syntax_analysis.py", 288),
    ("fact -> fact DIVMUL term", "fact", 3, "p_fact", "syntax_analysis.py", 289),
    ("term -> arg", "term", 1, "p_term", "syntax_analysis.py", 297),
    ("term -> LPAR expr RPAR", "term", 3, "p_term", "syntax_analysis.py", 298),
    ("arg -> NUMBER", "arg", 1, "p_arg", "syntax_analysis.py", 306),
    ("arg -> STRING", "arg", 1, "p_arg", "syntax_analysis.py", 307),
    ("arg -> VARIABLE_TYPE ID", "arg", 2, "p_arg", "syntax_analysis.py", 308),
    (
        "arg -> VARIABLE_TYPE ID LCUADR RCUADR",
        "arg",
        4,
        "p_arg",
        "syntax_analysis.py",
        309,
    ),
    ("arg -> ID LCUADR RCUADR", "arg", 3, "p_arg", "syntax_analysis.py", 310),
    ("arg -> var_cal", "arg", 1, "p_arg", "syntax_analysis.py", 311),
    ("arg -> NUMBER ID", "arg", 2, "p_arg", "syntax_analysis.py", 312),
    ("arg -> func", "arg", 1, "p_arg", "syntax_analysis.py", 313),
]
